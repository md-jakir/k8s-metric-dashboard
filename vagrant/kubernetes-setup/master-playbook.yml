- name: Change hostname for master and workers node 
  hosts: all
  #vars_files:
  #- ./env.yml
  gather_facts: no
  tasks:
  # - name: changing hostname for master node
  #   hostname:
  #     name: k8s-master.example.com
  #   when: inventory_hostname == "master"

  # - name: changing hostname for worker1 node
  #   hostname:
  #     name: k8s-worker1.example.com
  #   when: inventory_hostname == "worker1"

  #  - name: changing hostname for worker2 node
  #    hostname:
  #      name: k8s-worker2.example.com
  #    when: inventory_hostname == "worker2"

  # - name: Adding maste node in /etc/hosts file 
  #   lineinfile: 
  #     dest: /etc/hosts
  #     line: "{{ master_addr}} k8s-master.example.com k8s-master"

  # - name: Adding worker1 node in /etc/hosts file 
  #   lineinfile: 
  #     dest: /etc/hosts
  #     #line: "192.168.56.126 k8s-worker.example.com k8s-worker"
  #     line: "{{ worker_addr }} k8s-worker1.example.com k8s-worker1"

  # - name: Adding worker2 node in /etc/hosts file 
  #   lineinfile: 
  #     dest: /etc/hosts
  #     #line: "192.168.56.127 k8s-worker1.example.com k8s-worker1"
  #     line: "{{ worker_node2 }} k8s-worker2.example.com k8s-worker2"

  - name: Disable swam in /etc/fstabe
    shell: sed -i '/swap/s/^/#/g' /etc/fstab && swapoff -a
    become: true

  - name: Disable SeLinux 
    shell: sed -i '/SELINUX/s/^/#/g' /etc/selinux/config && echo "SELINUX=disabled" >> /etc/selinux/config && setenforce 0
    become: true

  - name: Stop and disable firewalld serivces 
    shell: systemctl stop firewalld && systemctl disable firewalld
    become: true

  - name: load br_netfilter module
    shell: modprobe br_netfilter
    become: true

  - name: Installing dependency packages in master and workers node
    become: true
    yum:
      name: "{{ packages }}"
      state: present
    #with_items: "{{ pre_packages }}"
    vars: 
      packages:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2

  - name: Add docker repo into yum repository
    become: true
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo

  - name: upgrade all packages
    become: true
    yum:
      name: '*'
      state: present

  - name: Installing docker in master and workers node
    yum: 
      name: "{{ packages }}"
      state: present
    #with_items: "{{ docker_packages }}"
    vars:
      packages:
      - containerd.io
      - docker-ce
      - docker-ce-cli

  - name: creating daemon.json file
    become: true
    shell: 
      cmd: |
        mkdir /etc/docker
        cat > /etc/docker/daemon.json << EOF 
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
          "overlay2.override_kernel_check=true"
        ]
        }
        EOF
  - name: Creating systemd file start and enable docker daemon
    become: true
    shell: 
      cmd: |
        mkdir -p /etc/systemd/system/docker.service.d
        systemctl daemon-reload
        systemctl start docker
        systemctl enable docker
  # Installing Kubernetes components in master and workers node
  - name: Adding Kubernetes repo
    become: true
    shell: 
      cmd: | 
        cat > /etc/yum.repos.d/kubernetes.repo << EOF 
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=0
        repo_gpgcheck=0
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        EOF
  - name: Installing Kubeadm, kubeclt and kubelet
    become: true
    yum:
      name: "{{ packages }}"
      disable_excludes: 'kubernetes'
      state: present
    #with_items: "{{ kube_packages }}"
    #become: true
    vars:
      packages: 
      - kubeadm-1.21.13
      - kubectl-1.21.13
      - kubelet-1.21.13

  - name: Enable kubelet
    become: true
    shell:
      cmd: |
        systemctl enable --now kubelet
  - name: Create kubernetes network file to configure system configuration
    become: true
    shell:
      cmd: |
        cat > /etc/sysctl.d/k8s.conf << EOF 
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF
        sysctl --system

  - name: Initialize the Kubernetes cluster using kubeadm
    become: true
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.56.10"  --node-name k8s-master --pod-network-cidr=10.244.0.0/16
  
  - name: Setup kubeconfig for vagrant user
    become: true
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config
  
  - name: Install weave pod network
    become: true
    command: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  
  - name: Install untaint master node
    become: true
    command: kubectl taint nodes --all node-role.kubernetes.io/master-
  
  - name: Generate join command
    become: true
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy join command to local file
    become: true
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="/tmp/join_command"
